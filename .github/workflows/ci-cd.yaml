name: CI for nyatetApp

on:
  push:
    branches:
      - workflow-test
  pull_request:
    branches:
      - ci-cd-testing

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
      VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run tests
        run: npm run test

      - name: Build project
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-build
          path: dist

  deploy_preview:
    name: Deploy Preview Channel
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'pull_request'
    permissions:
      pull-requests: write
      statuses: write
      checks: write
    steps:
      - name: Checkout code (for build context)
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-build
          path: dist

      - name: Deploy to Firebase Hosting Preview Channel
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}"
          projectId: nyatetapp
          channelId: preview-${{ github.event.number }}
          expires: 7d

  deploy_live:
    name: Deploy Live Channel
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/workflow-test'

    steps:
      - name: Checkout code (for build context)
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-build
          path: dist

      - name: Deploy to Firebase Hosting Live Channel
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}"
          projectId: nyatetapp
          channelId: live
